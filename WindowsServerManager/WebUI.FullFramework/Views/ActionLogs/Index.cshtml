@model BLL.Common.PagedResults<DataAccessLayer.Entities.ActionLog>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<section class="container-fluid">
    <div class="row">
        <div class="actionBar">
            <p class="actionBarElement">Find setting:</p>
            <div class="actionBarElement">
                <input type="text" class="input-text" />
            </div>
            <button class="ts-btn ts-btn-mini actionBarElement">
                Filter
            </button>
            <p class="actionBarElement" style="margin-left: 20px;">
                Visible columns: 
            </p>
            <div class="dropdown actionBarElement">
                <button type="button" class="ts-btn btn-default ts-btn-mini dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-cog"></span> <span class="caret"></span></button>
                <ul class="dropdown-menu" id="change-coll-visible">
                </ul>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="userTable">
            <table class="userList dark" id="action-logs-table">
                <thead>
                <tr>
                    <th class="coll">Action</th>
                    <th class="coll">Controller</th>
                    <th class="coll" style="max-width: 500px;">ActionParams</th>
                    <th class="coll">OriginalUrl</th>
                    <th class="coll">UserHost</th>
                    <th class="coll">UserAgent</th>
                    <th class="coll">HttpMethod</th>
                    <th class="coll">Form</th>
                    <th class="coll">Query</th>
                    <th class="coll">Referer</th>
                    <th class="coll">Headers</th>
                    <th class="coll">Cookies</th>
                    <th class="coll">UserName</th>
                    <th class="coll">StartExecution</th>
                    <th class="coll">FinishExecution</th>
                    <th class="coll">ExecutionTime</th>
                </tr>
                </thead>
                <tbody>
                @if (Model.Results.Any())
                {
                    foreach (var actionLog in Model.Results)
                    {
                        <tr>
                            <td>@actionLog.Action</td>
                            <td>@actionLog.Controller</td>
                            <td style="max-width: 500px;">@actionLog.ActionParams</td>
                            <td>@actionLog.OriginalUrl</td>
                            <td>@actionLog.UserHost</td>
                            <td>@actionLog.UserAgent</td>
                            <td>@actionLog.HttpMethod</td>
                            <td>@actionLog.Form</td>
                            <td>@actionLog.Query</td>
                            <td>@actionLog.Referer</td>
                            <td>@actionLog.Headers</td>
                            <td>@actionLog.Cookies</td>
                            <td>@actionLog.UserName</td>
                            <td>@actionLog.StartExecution</td>
                            <td>@actionLog.FinishExecution</td>
                            <td>@actionLog.ExecutionTime</td>
                            @*<td>
                                    <div class="toolbarItem text-center" data-toggle="dropdown">
                                        <span class="btn-group" id="sp_span_bcActions">
                                            <a class="ts-btn ts-btn-mini"
                                               type="button"
                                               onclick="showUserActionPopup('popup_@setting.Id')"
                                               data-setting-code="@setting.Code"
                                               data-setting-id="@setting.Id"
                                               data-toggle="dropdown">
                                                Open
                                            </a>
                                        </span>
                                    </div>
                                </td>*@
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4">Нет данных</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="centerBlock">
            <ul class="pagination">
                <li><a href="@Url.Action("Index", "ActionLogs", new {page = 1})">&laquo;</a></li>
                @for (var i = Model.PageNumber - 2; i <= Model.PageNumber + 5; i++)
                {
                    if (i == Model.PageNumber && i <= Model.TotalNumberOfPages && i > 0)
                    {
                        <li class="active"><a href="@Url.Action("Index", "ActionLogs", new {page = i})">@i <span class="sr-only">(current)</span></a></li>
                    }
                    else if (i <= Model.TotalNumberOfPages && i > 0)
                    {
                        <li><a href="@Url.Action("Index", "ActionLogs", new {page = i})">@i</a></li>
                    }
                }
                <li><a href="@Url.Action("Index", "ActionLogs", new {page = Model.TotalNumberOfPages})">&raquo;</a></li>
            </ul>
        </div>
    </div>
</section>

<script>
    var allColls = [];
    var visibleColls = [];
    var defaultVisibleColls = [
        "Action",
        "Controller",
        "ActionParams",
        "OriginalUrl",
        "HttpMethod",
        "UserName",
        "StartExecution"
    ];

    function initColumsFilterSelect() {
        var tableColls = $("#action-logs-table thead tr th");
        allColls = Array.from(tableColls, (x) => x.outerText);
        var multiSelectUl = $("#change-coll-visible");

        if (defaultVisibleColls.length === 0) {
            defaultVisibleColls = allColls;
        }

        $.each(allColls,
            function (key, item) {
                // Add new menu item into columns visible select
                // <li><a href="#" class="small" data-value="option1" tabIndex="-1"><input type="checkbox"/>&nbsp;Option 1</a></li>

                var $li = $("<li></li>");
                var $a = $("<a></a>");
                var $input = $("<input/>");

                $a.attr("href", "#");
                $a.attr("class", "small");
                $a.attr("data-value", item);
                $a.attr("tabIndex", "-1");

                $input.attr("type", "checkbox");
                if (defaultVisibleColls.indexOf(item) > -1) {
                    $input.attr("checked", "checked");
                    visibleColls.push(item);
                }
                $input.val(item);

                $a.append($input);
                $a.append(item);
                $li.append($a);

                multiSelectUl.append($li);
            });

        setClickEventForCollsSelect();
    };

    function setClickEventForCollsSelect() {
        $('#change-coll-visible a').on('click', function(event) {

            var $target = $(event.currentTarget),
                val = $target.attr('data-value'),
                $inp = $target.find('input'),
                idx;

            if ((idx = visibleColls.indexOf(val)) > -1) {
                visibleColls.splice(idx, 1);
                setTimeout(function() {$inp.prop('checked', false)}, 0);
            } else {
                visibleColls.push(val);
                setTimeout(function() { $inp.prop('checked', true) }, 0);
            }

            var hidenColls = arr_diff(visibleColls, allColls);
            hideColls(hidenColls);
            showColls(visibleColls);
            $(event.target).blur();
            return false;
        });
    };

    function hideColls(hidenColls) {
        $.each(hidenColls,
            function(key, item) {
                $(`#action-logs-table tbody tr td:nth-child(${$(`#action-logs-table thead tr th.coll:contains(${item})`).index() + 1})`).hide();
                $(`#action-logs-table thead tr th:nth-child(${$(`#action-logs-table thead tr th.coll:contains(${item})`).index() + 1})`).hide();
            });
    };

    function showColls(visibleColls) {
        $.each(visibleColls,
            function (key, item) {
                $(`#action-logs-table tbody tr td:nth-child(${$(`#action-logs-table thead tr th.coll:contains(${item})`).index() + 1})`).show();
                $(`#action-logs-table thead tr th:nth-child(${$(`#action-logs-table thead tr th.coll:contains(${item})`).index() + 1})`).show();
            });
    };

    function arr_diff (a1, a2) {

        var a = [], diff = [];

        for (var i = 0; i < a1.length; i++) {
            a[a1[i]] = true;
        }

        for (var i = 0; i < a2.length; i++) {
            if (a[a2[i]]) {
                delete a[a2[i]];
            } else {
                a[a2[i]] = true;
            }
        }

        for (var k in a) {
            diff.push(k);
        }

        return diff;
    };

    initColumsFilterSelect();
    hideColls(arr_diff(visibleColls, allColls));
</script>
