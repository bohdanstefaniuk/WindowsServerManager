@using WebUI.FullFramework.Enums
@using WebUI.FullFramework.Helpers
@model WebUI.FullFramework.Models.IISIndexViewModel

@{
    ViewBag.Title = "Index";
}

@Styles.Render("~/Content/JsTree.min.css")
<section class="container-fluid">
    <div class="row">
        <div class="col-md-3">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Сервер: B-STEfaniuk(TSCRM)</h3>
                </div>
                <div class="panel-body">
                    <div id="jstree">
                        @Html.GetJsTreeMenu();
                    </div>
                </div>
            </div>
        </div>
        @if (!string.IsNullOrEmpty( Model.ApplicationPath))
        {
            <div class="col-md-9">
                <div class="">
                    <blockquote>
                        <p>@Model.ApplicationPath</p>
                        <p>Site name: @Model.SiteName</p>
                    </blockquote>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">Действия</h3>
                    </div>
                    <div class="panel-body">
                        <div class="IISButton text-center @(Model.ActionViewType == IISViewActionType.InformationComponent ? "IISButtonSelected" : "")">
                            <a href="@Url.Action("Index", "IIS", new { viewActionType = IISViewActionType.InformationComponent, siteType =  Model.SiteType, applicationPath =  Model.ApplicationPath })">
                                <img src="@Url.Content("~/Resources/Images/StatusInformation_16x.svg")"
                                     alt=""
                                     class="IISButtonIco">
                                <p class="text-center">
                                    Информация
                                    <br>i
                                </p>
                            </a>
                        </div>
                        @if (Model.IsPoolStartingOrStarted)
                        {
                            <div class="IISButton text-center">
                                <a href="#">
                                    <img src="@Url.Content("~/Resources/Images/StatusPause_cyan_16x.svg")"
                                         alt=""
                                         id="stopPoolActionButton"
                                         class="IISButtonIco">
                                    <p class="text-center">Остановить пулл</p>
                                </a>
                            </div>
                        }
                        @if (Model.IsPoolStoppingOrStopped)
                        {
                            <div class="IISButton text-center">
                                <a href="#">
                                    <img src="@Url.Content("~/Resources/Images/StatusRun_16x.svg")"
                                         alt=""
                                         id="startPoolActionButton"
                                         class="IISButtonIco">
                                    <p class="text-center">Запустить пулл</p>
                                </a>
                            </div>
                        }
                        @if (Model.IsPoolStartingOrStarted)
                        {
                            <div class="IISButton text-center">
                                <a href="#">
                                    <img src="@Url.Content("~/Resources/Images/Refresh_16x.svg")"
                                         alt=""
                                         id="recyclePoolActionButton"
                                         class="IISButtonIco">
                                    <p class="text-center">
                                        Рестарт
                                        <br>пулла
                                    </p>
                                </a>
                            </div>
                        }
                        <div class="IISButton text-center">
                            <a href="#" data-toggle="modal" data-target="#deleteApplicationModal">
                                <img src="@Url.Content("~/Resources/Images/DeleteTranslation_16x.svg")"
                                     alt=""
                                     id="deleteApplicationActionButton"
                                     class="IISButtonIco">
                                <p class="text-center">Удалить приложение</p>
                            </a>
                        </div>
                        <div class="IISButton text-center">
                            <a href="#">
                                <img src="@Url.Content("~/Resources/Images/AzureRedisCache_color_16x.svg")"
                                     alt=""
                                     id="flushRedisDbActionButton"
                                     class="IISButtonIco">
                                <p class="text-center">Очистить Redis</p>
                            </a>
                        </div>
                        @*<div class="IISButton text-center @(Model.ActionViewType == IISViewActionType.ConnectionStringsComponent ? "IISButtonSelected" : "")">
                            <a href="@Url.Action("Index", "IIS", new { viewActionType = IISViewActionType.ConnectionStringsComponent, siteType =  Model.SiteType, applicationPath =  Model.ApplicationPath })">
                                <img src="@Url.Content("~/Resources/Images/DatabaseSetting_16x.svg")"
                                     alt=""
                                     class="IISButtonIco">
                                <p class="text-center">Строки подключений</p>
                            </a>
                        </div>*@
                        <div class="IISButton text-center @(Model.ActionViewType == IISViewActionType.ConfigFileComponent ? "IISButtonSelected" : "")">
                            <a href="@Url.Action("Index", "IIS", new { viewActionType = IISViewActionType.ConfigFileComponent, siteType =  Model.SiteType, applicationPath =  Model.ApplicationPath })">
                                <img src="@Url.Content("~/Resources/Images/ConfigurationFile_16x.svg")"
                                     alt=""
                                     class="IISButtonIco">
                                <p class="text-center">
                                    Конфиг.
                                    <br> файл
                                </p>
                            </a>
                        </div>
                        @if (Model.IsFeatureTableExist)
                        {
                            <div class="IISButton text-center @(Model.ActionViewType == IISViewActionType.FeaturesComponent ? "IISButtonSelected" : "")">
                                <a href="@Url.Action("Index", "IIS", new { viewActionType = IISViewActionType.FeaturesComponent, siteType =  Model.SiteType, applicationPath =  Model.ApplicationPath })">
                                    <img src="@Url.Content("~/Resources/Images/MagicWand_16x.svg")"
                                         alt=""
                                         class="IISButtonIco">
                                    <p class="text-center">
                                        Список
                                        <br>фич
                                    </p>
                                </a>
                            </div>
                        }
                    </div>
                </div>
                <div id="IISPageComponentContainer">
                    @switch (Model.ActionViewType)
                    {
                        case IISViewActionType.InformationComponent:
                            Html.RenderAction("GetInformationComponent", "IIS", new { path =  Model.ApplicationPath, siteType =  Model.SiteType });
                            break;
                        case IISViewActionType.ConnectionStringsComponent:
                            Html.RenderAction("GetConnectionStringsComponent", "IIS", new { path = Model.ApplicationPath, siteType = Model.SiteType });
                            break;
                        case IISViewActionType.FeaturesComponent:
                            Html.RenderAction("GetFeaturesComponent", "IIS", new { db = Model.Database, redisDb = Model.RedisDatabase });
                            break;
                        case IISViewActionType.ConfigFileComponent:
                            Html.RenderAction("GetConfigurationFileComponent", "IIS", new { path = Model.ApplicationPath, siteType = Model.SiteType });
                            break;
                    }
                </div>
            </div>
        }
    </div>
</section>

<section>
    @{
        Html.RenderAction("GetDeleteApplicationModal", "IIS", new { pathOrName = Model.ApplicationPath, siteName = Model.SiteName, siteType = Model.SiteType, database = Model.Database });
    }
</section>

@section scripts {
    @Scripts.Render("~/Scripts/jstree.min.js")
    @Scripts.Render("~/Scripts/Custom/LoadJsTree.js")
    @Scripts.Render("~/Scripts/Custom/IISPageComponens.js")
    @Scripts.Render("~/Scripts/Custom/AjaxPost.js")

    <script>
        $("#jstree").jstree().bind("select_node.jstree", function (e, data) {
            var href = data.node.a_attr.href;
            document.location.href = href;
        });

        var ajaxPost = AjaxPost();
        $("#startPoolActionButton").click(function () {
            var url = "@Url.Action("StartApplicationPool","IIS", new { poolName = Model.ApplicationPoolName })";
            ajaxPost.post(url);
        });
        $("#stopPoolActionButton").click(function() {
            var url = "@Url.Action("StopApplicationPool","IIS", new { poolName = Model.ApplicationPoolName })";
            ajaxPost.post(url);
        });
        $("#recyclePoolActionButton").click(function() {
            var url = "@Url.Action("RecycleApplicationPool","IIS", new { poolName = Model.ApplicationPoolName })";
            ajaxPost.post(url);
        });
        $("#flushRedisDbActionButton").click(function() {
            var url = "@Url.Action("FlushRedisDb","IIS", new { redisDb = Model.RedisDatabase })";
            ajaxPost.post(url);
        });

    </script>
}
